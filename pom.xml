<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.lugano.egov.bpm</groupId>
    <artifactId>offset-date-time</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>war</packaging>

    <name>Camunda BPM Process Application</name>
    <description>A Process Application for [Camunda BPM](http://docs.camunda.org). [The project has been generated by
        the Maven archetype 'camunda-archetype-ejb-war-7.9.2']
    </description>

    <properties>
        <camunda.version>7.9.9-ee</camunda.version>
        <!--
        Adjust if you want to use Camunda Enterprise Edition (EE):
        <camunda.version>7.9.0-ee</camunda.version>
        Make sure you also switch to EE repository below
        -->
        <arquillian.version>1.4.0.Final</arquillian.version>
        <jboss.version>7.2.0.Final</jboss.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <jackson.datatype.version>2.7.4</jackson.datatype.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.camunda.bpm.dmn</groupId>
                <artifactId>camunda-engine-dmn-bom</artifactId>
                <version>${camunda.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!-- Needed for ArquillianTest -->
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>1.0.0.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>


        <!-- ======================================= COMPANY ARTIFACTS =========================================== -->

        <!--        &lt;!&ndash; custom library enforcing bpm best practices &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>ch.lugano.egov.bpm</groupId>-->
        <!--            <artifactId>commons</artifactId>-->
        <!--            <version>3.1.0</version>-->
        <!--        </dependency>-->


        <!-- ======================================= CAMUNDA ARTIFACTS =========================================== -->

        <!-- process engine, needs to be provided -->
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- CDI integration, needs to be included in WAR, otherwise CDI can not work correctly -->
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-cdi</artifactId>
        </dependency>

        <!-- skip camunda-ejb-client since our bpm-commons provides the process application -->
        <dependency>
            <!-- client for Java EE application server integration, included in WAR as an alternative to write your own ProcessApplication class -->
            <groupId>org.camunda.bpm.javaee</groupId>
            <artifactId>camunda-ejb-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.camunda.spin</groupId>
            <artifactId>camunda-spin-dataformat-json-jackson</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.datatype.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.datatype.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>


        <!-- Required to use Spin dataformat support in unit tests -->
        <!--    <dependency>-->
        <!--      <groupId>org.camunda.spin</groupId>-->
        <!--      <artifactId>camunda-spin-dataformat-all</artifactId>-->
        <!--      <scope>provided</scope>-->
        <!--    </dependency>-->
        <!--    <dependency>-->
        <!--      <groupId>org.camunda.bpm</groupId>-->
        <!--      <artifactId>camunda-engine-plugin-spin</artifactId>-->
        <!--      <scope>provided</scope>-->
        <!--    </dependency>-->


        <!-- ======================================= TESTING ARTIFACTS =========================================== -->

        <dependency>
            <groupId>ch.lugano.egov</groupId>
            <artifactId>camunda-engine-plugin</artifactId>
            <version>2.0.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- AssertJ Testing Library -->
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-assert</artifactId>
            <version>1.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Needed for ArquillianTest -->
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Needed for ArquillianTest -->
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Needed for ArquillianTest -->
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Needed for InMemoryH2Test -->
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.197</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Used to generate test coverage reports, see https://github.com/camunda/camunda-consulting/tree/master/snippets/camunda-bpm-process-test-coverage -->
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-process-test-coverage</artifactId>
            <version>0.3.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- use logback as logger -->
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <!-- apache commons logging => slf4j -->
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.25</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!--  java util logging => slf4j -->
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>1.7.25</version>
            <scope>test</scope>
        </dependency>


    </dependencies>


    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <!-- Deploy to Wildfly: mvn clean wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.2.1.Final</version>
            </plugin>
        </plugins>
    </build>


    <profiles>

        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <!-- Needed for ArquillianTest -->
                    <!-- Requires a running WildFly with Camunda BPM
                         change to other artifact for embedded start or different server -->
                    <!-- Included here for convenience when running the test in Eclipse -->
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>2.1.0.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <!-- Exclusion for Arquillian test cases to avoid dependency on infrastructure
                                     for Maven build. Feel free to adjust to your testing requirements. -->
                                <exclude>**/Arquillian*.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Start a Camunda Wildfly distro and run: mvn clean test -Parq-wildfly-remote -->
            <id>arq-wildfly-remote</id>
            <dependencies>
                <dependency>
                    <!-- Needed for ArquillianTest -->
                    <!-- Requires a running Wildfly with Camunda BPM -->
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>2.1.0.Final</version>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>sun.jdk</groupId>
                            <artifactId>jconsole</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>

    </profiles>

</project>
